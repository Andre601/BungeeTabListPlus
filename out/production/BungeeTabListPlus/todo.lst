1.7#3
=====
 + added {prefixColor} variable
 + annoying notification will tell admins that a new version of bungeetablistplus is available for download
 * also transfer display name and use it instead of tabname if appropriate, to avoid clipping
   -> {name} and {player} now uses the displayName instead of the tabName by default
   -> the {tabName} variable gives access to the playerListName/tabName (from bukkit/vault) of a player
 * support for latest factions (v7.3.0)
 * try/catch arround informationProvider calls, so one error doesn't screw up everything
 * prefixes from config more important than the ones from bukkit/bungeeperms
 * the reload command can now also change the tablistUpdateIntervall

1.7#4
=====
 * compatible to vault 1.2.27
 * the {tabName} variable now falls back to the players display name if the tabName is not available instead of leaving the name blank.
 * made some adjustments to the generated default config

1.7#5
=====
 + added {currency} and {currencyPl} variable
 * fixed updateNotifier
 * fixed errors on shutdown

1.7#6
=====
 * bukkitbridge now uses async threads for better performance
 * slightly adjusted default config
 * fixed factions hook for v7.3.0 and above
 * bugfix: check for server != null
 * fixed errors on shutdown

1.8
======
 * support for mc1.8

1.8#2
=====
 + you can add a header/footer to the tablist
 + 1.8 clients now see the correct skin/head of a player
 * reenabled updateChecker
 * fixed excludeServers
 * fixed 1.7 clients crash in rare situations due to wrong scoreboard packets

1.8#3
=====
 * fixed support for 1.6.4 (don't know if any 1.7.X versions have also been affected by the bug)

1.8#4
=====
 + added {onlineState:SERVER} variable
 + send a message to me if I join your server that tells me you're using my plugin
 + added multiline support to header/footer - use {newline} to generate a linebreak
 + configurable default skin (see http://www.reddit.com/r/MinecraftHeads/comments/1m1s0g/official_heads_made_by_mojang_marc/ for cool heads)
 + per slot configurable skin (do '[SKIN=Herobrine] some &6text')
 * supports tab_size < 80 on 1.8 clients
 * use bungeecords API for Tabheader/footer if available

1.8#5
=====
 * fix creepy text if tab_size < 80
 * improve head handling if tab_size < 80

1.8#6
=====
 * add public API

1.8#7
=====
 * fixed exclude servers on 1.7 clients

1.8#8
=====
 + support syncing player count with RedisBungee
   -> `{rplayers}` global player count
   -> `{rplayers:<server>}` per server player count
 * fix crash when dollar sign or backslash in variable replacement text
 * don't crash if tabsize = 60 && more than 60 players are on one server of the network

1.8#9
=====
 + worldAlias setting similar to serverAlias
 + add config option to disable showing correct player skins
 + {internalServerName} - name of the server as defined in bungee's config.yml
 + {server_rplayer_count} shows the number of redisBungee players on a server. For use in serverLines. If used anywhere else shows the number of RedisPlayers on the server of the viewing player.
 * not working hooks in BukkitBridge are disabled automatically
 * [SKIN=?] also works infront of {fillplayers}
 * fix IndexOutOfBoundsException


TODO
====

people want it to support scoreboard prefix/suffix - but I don't want that

overuse of [COLUMN=?] causes bug

cool layout

check essentials nickname updating

make fakeplayers available for public

improve redisbungee support (rfillplayers)

allow [SKIN] before auto {fillplayers}

fix Â§cAn internal error occurred! Please send the following stacktrace to the developer in order to help resolving the problem
    java.io.IOException: Server returned HTTP response code: 429 for URL: https://sessionserver.mojang.com/session/minecraft/profile/50c8510b5ea04d60be9a7d542d6cd156?unsigned=false
       at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1626)
       at sun.net.www.protocol.https.HttpsURLConnectionImpl.getInputStream(HttpsURLConnectionImpl.java:254)
       at codecrafter47.bungeetablistplus.managers.SkinManager.fetchSkin(SkinManager.java:113)
       at codecrafter47.bungeetablistplus.managers.SkinManager.access$600(SkinManager.java:40)
       at codecrafter47.bungeetablistplus.managers.SkinManager$SkinFetchTask.run(SkinManager.java:175)
       at net.md_5.bungee.scheduler.BungeeTask.run(BungeeTask.java:58)
       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
       at java.lang.Thread.run(Thread.java:744)

       --> clear bad usernames from time to time, so they can refresh


next update
===========

hello! How can i change that my server names are not moving when more then 7 
players are in the server? I want to have 7 players for each server name, and 
after that ''en {othercount} anderen'' ( so 8 lines). The Creative can have 15 
playerlines. Everytime when more then 7 players are joining in survival, 
Amsterdam moves down :(

make it possible to color all players on the currentserver in white and the others gray (javaScript?)

too much [COLUMN=?] causes bug

nicknames with essentials not working?

very far future
===============

tabComplete support

use bridge version to check whether the plugin is uptodate (newer bridge version)

ranksort by order in bungee's config.yml

sort by currentserver first

tabsize per server

scrolling text
multislot scrolling text

improve performance in sortrules

showTo more flexible

uuid support for showTo

improve automatic {fillplayers}: It would be nice to have a feature to combine 
    several servers into 1 server, this would be very usefull for a minigames 
    type of server setting, where you have different servers acting for different 
    minigames. This would be helpful to categorize all players under 1 player count

two servers share one column - maybe a vertical mode

group rank from vault - vault doesn't offer this - maybe from pex?


never
=====
connect economy databases
add spaces and canIhazmoreSpaces
groupplayers:permgroup
custom config library for more flexibitity